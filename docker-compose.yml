version: "3.7"

services:
  communication:
    image: communication-image
    container_name: communication-service
    volumes:
      - .:/support-service:cached
    ports:
      - 4000:4000
    depends_on:
      - db
      
  docsgenerator:
    image: docsgenerator-image
    container_name: docsgenerator-service
    volumes:
      - .:/support-service:cached
    ports:
      - 4001:4001
    depends_on:
      - db

  db:
    restart: always
    container_name: communication-db
    image: postgres:10-alpine
    volumes:
      - ./database:/var/lib/postgresql
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5436:5432
    healthcheck:
      test: "exit 0"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    logging:
      driver: none
    expose:
      - "2181"

  kafka:
    image: wurstmeister/kafka
    env_file:
      - config/kafka-variables.env
    container_name: kafka
    logging:
      driver: none
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      ZOOKEEPER_SASL_ENABLED: 'false'
    depends_on:
      - zookeeper
    volumes:
      - ./:/etc/kafka